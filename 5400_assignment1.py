# -*- coding: utf-8 -*-
"""5400_assignment1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DgFJc3k4g-qzZDvUM_qorRfefmREifwI
"""

import requests
from bs4 import BeautifulSoup
import numpy as np
import pandas as pd
import re
import datetime

reviews = []
values = []
dates_original = []
dates = []
pages = []
company = []
dates_first = []

#just collect reviews for the first 50 pages
for i in range(1,51):
  link = 'https://www.trustpilot.com/review/betterwayhealth.com?page=' + str(i)
  pages.append(link)

for page in pages:
  com = requests.get(page)
  soup = BeautifulSoup(com.text, 'html.parser')
  all_review = soup.find_all(class_ = "paper_paper__1PY90 paper_square__lJX8a card_card__lQWDv card_noPadding__D8PcU styles_cardWrapper__LcCPA styles_show__HUXRb styles_reviewCard__9HxJJ")
  for review in all_review:
    # get date
    review_date_original = review.select_one(selector="time")
    dates_original.append(review_date_original.getText())
    # Convert review date texts into Python datetime objects
    review_date = review.select_one(selector="time").getText().replace("Updated ", "")
    if "hours ago" in review_date.lower() or "hour ago" in review_date.lower():
      review_date = datetime.datetime.now().date()
    elif "a day ago" in review_date.lower():
      review_date = datetime.datetime.now().date() - datetime.timedelta(days=1)
    elif "days ago" in review_date.lower():
      review_date = datetime.datetime.now().date() - datetime.timedelta(days=int(review_date[0]))
    else:
      review_date = datetime.datetime.strptime(review_date, "%b %d, %Y").date()
    dates.append(review_date)

    # get review star
    rating = review.find(class_ = "star-rating_starRating__4rrcf star-rating_medium__iN6Ty").findChild()
    values.append(rating["alt"])

    # get review body
    review_body = review.find(class_ = "typography_typography__QgicV typography_body__9UBeQ typography_color-black__5LYEn typography_weight-regular__TWEnf typography_fontstyle-normal__kHyN3")
    if review_body == None:
      reviews.append("")
    else:
      reviews.append(review_body.getText())
    # company name
    name = 'Better Way Health'
    company.append(name)

ratingvalues = []
for i in range(len(values)):
  rating = str(values[i][6])
  ratingvalues.append(rating)

data = pd.DataFrame({'companyName': company, 'datePublished': dates, 'ratingValue': ratingvalues, 'reviewBody': reviews})

# can add a path so that the csv will save to local
data.to_csv('betterwayhealth_review.csv')